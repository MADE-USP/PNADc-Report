# Definindo trimestre e ano de referência
i=2023
q=4
#trimestre_imediatamente_anterior <- as.yearqtr(as.Date("2023-07-01"),"%Y-%m-%d")
#mesmo_trimestre_ano_anterior <- as.yearqtr(as.Date("2022-09-01"),"%Y-%m-%d")
# Definindo trimestre e ano de referência
i=2023
q=4
#trimestre_imediatamente_anterior <- as.yearqtr(as.Date("2023-07-01"),"%Y-%m-%d")
#mesmo_trimestre_ano_anterior <- as.yearqtr(as.Date("2022-09-01"),"%Y-%m-%d")
# Definindo trimestre e ano de referência
y=2023
q=4
#trimestre_imediatamente_anterior <- as.yearqtr(as.Date("2023-07-01"),"%Y-%m-%d")
#mesmo_trimestre_ano_anterior <- as.yearqtr(as.Date("2022-09-01"),"%Y-%m-%d")
knitr::opts_chunk$set(echo = TRUE, error=FALSE, warning=FALSE, message=FALSE)
options(digits=2)
# SEMPRE CARREGAR ESTE CHUNK ANTES DE ABRIR O CÓDIGO COM OS DADOS
#library(PNADcIBGE)
library(survey)
library(convey)
library(tidyverse)
library(dplyr)
library(knitr)
library(openxlsx)
library(kableExtra)
library(zoo)
library(gplots)
#install.packages("xts")
library(xts)
#devtools::install_github("kupietz/kableExtra")
# Setting work directory (Github)-----------------------------------------------
file_directory <- dirname(rstudioapi::getSourceEditorContext()$path)%>%
gsub("\\Short version", "", .)
setwd(file_directory)
getwd()
# Reading PNADc file------------------------------------------------------------
folder_path <- "Input/"
file_path <- paste0(file_directory, folder_path, "PNADc_", q, "_",y, ".RData")
load(file_path)
#load("H:/Meu Drive/Documentos/Made/relatorio_pnad/PNAD_dados_relatorio_04_2023.RData")
#load("H:/Meu Drive/Documentos/Made/relatorio_pnad/dados_serie_historica_042023.RData")
#Realizando a alteração da coluna "Trimestre" do formato character para o formato date;
colnames(Tx_emprego.sh)[colnames(Tx_emprego.sh) == "Taxa de emprego"] = "Taxa_emprego"
# Dividimos a coluna de data em uma de ano, e uma de trimestre:
date <- do.call(rbind, strsplit(Tx_emprego.sh$Trimestre, " "))
colnames(date)[colnames(date) <- c("Ano", "Trimestre")]
# Retornamos a data atualizada para o dataframe anterior
Tx_emprego.sh <- Tx_emprego.sh %>%
select(Taxa_emprego)
Tx_emprego.sh <- cbind(Tx_emprego.sh,date)
# Tendo as colunas de Ano e Trimestre, agora temos que criar as variaveis de dia e mes
# Definimos padrão para a criação dos trimestres, a partir do mês
Tx_emprego.sh$Dia <- 01
Tx_emprego.sh$Mes <- ifelse(Tx_emprego.sh$Trimestre=="Q1",1,
ifelse(Tx_emprego.sh$Trimestre=="Q2",4,
ifelse(Tx_emprego.sh$Trimestre=="Q3",7,10)))
Tx_emprego.sh$Ano <- as.numeric(Tx_emprego.sh$Ano)
# Agora dizer pro R que temos datas trimestrais, que serao identificadas pelo ano, mes e dia:
Tx_emprego.sh$Data <-as.yearqtr(with(Tx_emprego.sh,paste(Ano,Mes,Dia,sep="-")),"%Y-%m-%d")
# Voltamos para colunas originais
Tx_emprego.sh<- Tx_emprego.sh %>%
select(Taxa_emprego, Data)
#Checando formato
class(Tx_emprego.sh$Data)
# Corrigindo as datas
# Para lidar com datas no R, é preciso um formato bem especifico
# vamos entao editar o formato atual, que esta em "character" para um formato data
# Para isso, o R precisa da data num formato AA-MM-DD (ainda que o dia nao importe pra dados trimestrais)
# Vamos fazer um passo a passo disso aqui
# Primeiro, vamos dividir a coluna de data em uma de ano, e uma de trimestre:
date <- do.call(rbind, strsplit(EMPREGO.RG.sh$Trimestre, " ")) # dividindo a data pelo "espaco": ano e trimestre
colnames(date)[colnames(date) <- c("Ano", "Trimestre")] # colocando nomes corretos nas colunas
EMPREGO.RG.sh <- EMPREGO.RG.sh %>%
select(Ocupado, Categoria)
EMPREGO.RG.sh <- cbind(EMPREGO.RG.sh,date) # juntando com o data frame anterior
# Tendo as colunas de Ano e Trimestre, agora temos que criar as variaveis de dia e mes
EMPREGO.RG.sh$Dia <- 01  # considere o dia igual para todos (o dia não vai importar)
# Para criar o mes, temos que criar um padrao para que, a partir do mes, se identifique o trimestre
# Fazemos entao pelo primeiro mes: mes 1 p/ o 1o trimestre; mes 4 p/ o 2o trimestre, etc
# (aqui tambem tanto faz qual mes voce escolhe, so tem que estar dentro do trimestre certo)
# criamos um loop para ajustar o mes a partir do trimestre:
EMPREGO.RG.sh$Mes <- ifelse(EMPREGO.RG.sh$Trimestre=="Q1",1,
ifelse(EMPREGO.RG.sh$Trimestre=="Q2",4,
ifelse(EMPREGO.RG.sh$Trimestre=="Q3",7,10)))
# no comando "ifelse", nao precisamos o "10" vai aparecer caso nenhum das condicoes forem aceitas
# ou seja, caso nao seja Q1, Q2 ou Q3 - isto e, estamos no Q4
#Agora podemos dizer pro R a data, ja que temos todos os elementos que precisamos
# Primeiro, vamos transformar o ano em numerico
EMPREGO.RG.sh$Ano <- as.numeric(EMPREGO.RG.sh$Ano)
# Agora dizer pro R que temos datas trimestrais, que serao identificadas pelo ano, mes e dia:
EMPREGO.RG.sh$Data <-as.yearqtr(with(EMPREGO.RG.sh,paste(Ano,Mes,Dia,sep="-")),"%Y-%m-%d")
# Por fim, vamos voltar a ter apenas a Taxa de Ocupação, Categoria e a Data:
EMPREGO.RG.sh<- EMPREGO.RG.sh %>%
select(Ocupado, Categoria, Data)
#Realizando a alteração da coluna "Trimestre" do formato character para o formato date;
# Dividimos a coluna de data em uma de ano, e uma de trimestre:
date <- do.call(rbind, strsplit(EMPREGO.REG.sh$Trimestre, " "))
colnames(date)[colnames(date) <- c("Ano", "Trimestre")]
# Retornamos a data atualizada para o dataframe anterior
EMPREGO.REG.sh <- EMPREGO.REG.sh %>%
select(Ocupado, Regiao)
EMPREGO.REG.sh <- cbind(EMPREGO.REG.sh,date)
# Tendo as colunas de Ano e Trimestre, agora temos que criar as variaveis de dia e mes
# Definimos padrão para a criação dos trimestres, a partir do mês
EMPREGO.REG.sh$Dia <- 01
EMPREGO.REG.sh$Mes <- ifelse(EMPREGO.REG.sh$Trimestre=="Q1",1,
ifelse(EMPREGO.REG.sh$Trimestre=="Q2",4,
ifelse(EMPREGO.REG.sh$Trimestre=="Q3",7,10)))
EMPREGO.REG.sh$Ano <- as.numeric(EMPREGO.REG.sh$Ano)
# Agora dizer pro R que temos datas trimestrais, que serao identificadas pelo ano, mes e dia:
EMPREGO.REG.sh$Data <-as.yearqtr(with(EMPREGO.REG.sh,paste(Ano,Mes,Dia,sep="-")),"%Y-%m-%d")
# Voltamos para colunas originais
EMPREGO.REG.sh<- EMPREGO.REG.sh %>%
select(Ocupado, Regiao, Data)
#Checando formato
class(EMPREGO.REG.sh$Data)
ggplot(EMPREGO.RG.sh, aes(x=Data, y=Ocupado, color=Categoria)) +
geom_line(size=2) + # defining line thickness
geom_line(data = Tx_emprego.sh, aes(x = Data, y = Taxa_emprego, color = "Brasil"), linetype = "dashed") + # adding average employment rate
ggtitle("Figura 1: Taxa de Ocupação por Raça e Gênero") + # plot title
scale_colour_manual(name = "Região", values=c("#FF7276", "#45ff66","#eb52ff", "#3366ff","#feff41", "#8968D3")) + # specifying legend and colors
theme_bw() + # setting white background
# Definindo trimestre e ano de referência
i=2023
q=4
#trimestre_imediatamente_anterior <- as.yearqtr(as.Date("2023-07-01"),"%Y-%m-%d")
#mesmo_trimestre_ano_anterior <- as.yearqtr(as.Date("2022-09-01"),"%Y-%m-%d")
knitr::opts_chunk$set(echo = TRUE, error=FALSE, warning=FALSE, message=FALSE)
options(digits=2)
# SEMPRE CARREGAR ESTE CHUNK ANTES DE ABRIR O CÓDIGO COM OS DADOS
#library(PNADcIBGE)
library(survey)
library(convey)
library(tidyverse)
library(dplyr)
library(knitr)
library(openxlsx)
library(kableExtra)
library(zoo)
library(gplots)
#install.packages("xts")
library(xts)
#devtools::install_github("kupietz/kableExtra")
# Setting work directory (Github)-----------------------------------------------
file_directory <- dirname(rstudioapi::getSourceEditorContext()$path)%>%
gsub("\\Short version", "", .)
setwd(file_directory)
getwd()
# Reading PNADc file------------------------------------------------------------
folder_path <- "Input/"
file_path <- paste0(file_directory, folder_path, "PNADc_", q, "_",i, ".RData")
load(file_path)
#load("H:/Meu Drive/Documentos/Made/relatorio_pnad/PNAD_dados_relatorio_04_2023.RData")
#load("H:/Meu Drive/Documentos/Made/relatorio_pnad/dados_serie_historica_042023.RData")
#Realizando a alteração da coluna "Trimestre" do formato character para o formato date;
colnames(Tx_emprego.sh)[colnames(Tx_emprego.sh) == "Taxa de emprego"] = "Taxa_emprego"
# Dividimos a coluna de data em uma de ano, e uma de trimestre:
date <- do.call(rbind, strsplit(Tx_emprego.sh$Trimestre, " "))
colnames(date)[colnames(date) <- c("Ano", "Trimestre")]
# Retornamos a data atualizada para o dataframe anterior
Tx_emprego.sh <- Tx_emprego.sh %>%
select(Taxa_emprego)
Tx_emprego.sh <- cbind(Tx_emprego.sh,date)
# Tendo as colunas de Ano e Trimestre, agora temos que criar as variaveis de dia e mes
# Definimos padrão para a criação dos trimestres, a partir do mês
Tx_emprego.sh$Dia <- 01
Tx_emprego.sh$Mes <- ifelse(Tx_emprego.sh$Trimestre=="Q1",1,
ifelse(Tx_emprego.sh$Trimestre=="Q2",4,
ifelse(Tx_emprego.sh$Trimestre=="Q3",7,10)))
Tx_emprego.sh$Ano <- as.numeric(Tx_emprego.sh$Ano)
# Agora dizer pro R que temos datas trimestrais, que serao identificadas pelo ano, mes e dia:
Tx_emprego.sh$Data <-as.yearqtr(with(Tx_emprego.sh,paste(Ano,Mes,Dia,sep="-")),"%Y-%m-%d")
# Voltamos para colunas originais
Tx_emprego.sh<- Tx_emprego.sh %>%
select(Taxa_emprego, Data)
#Checando formato
class(Tx_emprego.sh$Data)
# Corrigindo as datas
# Para lidar com datas no R, é preciso um formato bem especifico
# vamos entao editar o formato atual, que esta em "character" para um formato data
# Para isso, o R precisa da data num formato AA-MM-DD (ainda que o dia nao importe pra dados trimestrais)
# Vamos fazer um passo a passo disso aqui
# Primeiro, vamos dividir a coluna de data em uma de ano, e uma de trimestre:
date <- do.call(rbind, strsplit(EMPREGO.RG.sh$Trimestre, " ")) # dividindo a data pelo "espaco": ano e trimestre
colnames(date)[colnames(date) <- c("Ano", "Trimestre")] # colocando nomes corretos nas colunas
EMPREGO.RG.sh <- EMPREGO.RG.sh %>%
select(Ocupado, Categoria)
EMPREGO.RG.sh <- cbind(EMPREGO.RG.sh,date) # juntando com o data frame anterior
# Tendo as colunas de Ano e Trimestre, agora temos que criar as variaveis de dia e mes
EMPREGO.RG.sh$Dia <- 01  # considere o dia igual para todos (o dia não vai importar)
# Para criar o mes, temos que criar um padrao para que, a partir do mes, se identifique o trimestre
# Fazemos entao pelo primeiro mes: mes 1 p/ o 1o trimestre; mes 4 p/ o 2o trimestre, etc
# (aqui tambem tanto faz qual mes voce escolhe, so tem que estar dentro do trimestre certo)
# criamos um loop para ajustar o mes a partir do trimestre:
EMPREGO.RG.sh$Mes <- ifelse(EMPREGO.RG.sh$Trimestre=="Q1",1,
ifelse(EMPREGO.RG.sh$Trimestre=="Q2",4,
ifelse(EMPREGO.RG.sh$Trimestre=="Q3",7,10)))
# no comando "ifelse", nao precisamos o "10" vai aparecer caso nenhum das condicoes forem aceitas
# ou seja, caso nao seja Q1, Q2 ou Q3 - isto e, estamos no Q4
#Agora podemos dizer pro R a data, ja que temos todos os elementos que precisamos
# Primeiro, vamos transformar o ano em numerico
EMPREGO.RG.sh$Ano <- as.numeric(EMPREGO.RG.sh$Ano)
# Agora dizer pro R que temos datas trimestrais, que serao identificadas pelo ano, mes e dia:
EMPREGO.RG.sh$Data <-as.yearqtr(with(EMPREGO.RG.sh,paste(Ano,Mes,Dia,sep="-")),"%Y-%m-%d")
# Por fim, vamos voltar a ter apenas a Taxa de Ocupação, Categoria e a Data:
EMPREGO.RG.sh<- EMPREGO.RG.sh %>%
select(Ocupado, Categoria, Data)
#Realizando a alteração da coluna "Trimestre" do formato character para o formato date;
# Dividimos a coluna de data em uma de ano, e uma de trimestre:
date <- do.call(rbind, strsplit(EMPREGO.REG.sh$Trimestre, " "))
colnames(date)[colnames(date) <- c("Ano", "Trimestre")]
# Retornamos a data atualizada para o dataframe anterior
EMPREGO.REG.sh <- EMPREGO.REG.sh %>%
select(Ocupado, Regiao)
EMPREGO.REG.sh <- cbind(EMPREGO.REG.sh,date)
# Tendo as colunas de Ano e Trimestre, agora temos que criar as variaveis de dia e mes
# Definimos padrão para a criação dos trimestres, a partir do mês
EMPREGO.REG.sh$Dia <- 01
EMPREGO.REG.sh$Mes <- ifelse(EMPREGO.REG.sh$Trimestre=="Q1",1,
ifelse(EMPREGO.REG.sh$Trimestre=="Q2",4,
ifelse(EMPREGO.REG.sh$Trimestre=="Q3",7,10)))
EMPREGO.REG.sh$Ano <- as.numeric(EMPREGO.REG.sh$Ano)
# Agora dizer pro R que temos datas trimestrais, que serao identificadas pelo ano, mes e dia:
EMPREGO.REG.sh$Data <-as.yearqtr(with(EMPREGO.REG.sh,paste(Ano,Mes,Dia,sep="-")),"%Y-%m-%d")
# Voltamos para colunas originais
EMPREGO.REG.sh<- EMPREGO.REG.sh %>%
select(Ocupado, Regiao, Data)
#Checando formato
class(EMPREGO.REG.sh$Data)
ggplot(EMPREGO.RG.sh, aes(x=Data, y=Ocupado, color=Categoria)) +
geom_line(size=2) + # defining line thickness
geom_line(data = Tx_emprego.sh, aes(x = Data, y = Taxa_emprego, color = "Brasil"), linetype = "dashed") + # adding average employment rate
ggtitle("Figura 1: Taxa de Ocupação por Raça e Gênero") + # plot title
scale_colour_manual(name = "Região", values=c("#FF7276", "#45ff66","#eb52ff", "#3366ff","#feff41", "#8968D3")) + # specifying legend and colors
theme_bw() + # setting white background
# Definindo trimestre e ano de referência
i=2023
q=4
#trimestre_imediatamente_anterior <- as.yearqtr(as.Date("2023-07-01"),"%Y-%m-%d")
#mesmo_trimestre_ano_anterior <- as.yearqtr(as.Date("2022-09-01"),"%Y-%m-%d")
knitr::opts_chunk$set(echo = TRUE, error=FALSE, warning=FALSE, message=FALSE)
options(digits=2)
# SEMPRE CARREGAR ESTE CHUNK ANTES DE ABRIR O CÓDIGO COM OS DADOS
#library(PNADcIBGE)
library(survey)
library(convey)
library(tidyverse)
library(dplyr)
library(knitr)
library(openxlsx)
library(kableExtra)
library(zoo)
library(gplots)
#install.packages("xts")
library(xts)
#devtools::install_github("kupietz/kableExtra")
# Setting work directory (Github)-----------------------------------------------
file_directory <- dirname(rstudioapi::getSourceEditorContext()$path)%>%
gsub("\\Short version", "", .)
setwd(file_directory)
getwd()
# Reading PNADc file------------------------------------------------------------
folder_path <- "Input/"
file_path <- paste0(file_directory, folder_path, "PNADc_", q, "_",i, ".RData")
load(file_path)
#load("H:/Meu Drive/Documentos/Made/relatorio_pnad/PNAD_dados_relatorio_04_2023.RData")
#load("H:/Meu Drive/Documentos/Made/relatorio_pnad/dados_serie_historica_042023.RData")
#Realizando a alteração da coluna "Trimestre" do formato character para o formato date;
colnames(Tx_emprego.sh)[colnames(Tx_emprego.sh) == "Taxa de emprego"] = "Taxa_emprego"
# Dividimos a coluna de data em uma de ano, e uma de trimestre:
date <- do.call(rbind, strsplit(Tx_emprego.sh$Trimestre, " "))
colnames(date)[colnames(date) <- c("Ano", "Trimestre")]
# Retornamos a data atualizada para o dataframe anterior
Tx_emprego.sh <- Tx_emprego.sh %>%
select(Taxa_emprego)
Tx_emprego.sh <- cbind(Tx_emprego.sh,date)
# Tendo as colunas de Ano e Trimestre, agora temos que criar as variaveis de dia e mes
# Definimos padrão para a criação dos trimestres, a partir do mês
Tx_emprego.sh$Dia <- 01
Tx_emprego.sh$Mes <- ifelse(Tx_emprego.sh$Trimestre=="Q1",1,
ifelse(Tx_emprego.sh$Trimestre=="Q2",4,
ifelse(Tx_emprego.sh$Trimestre=="Q3",7,10)))
Tx_emprego.sh$Ano <- as.numeric(Tx_emprego.sh$Ano)
# Agora dizer pro R que temos datas trimestrais, que serao identificadas pelo ano, mes e dia:
Tx_emprego.sh$Data <-as.yearqtr(with(Tx_emprego.sh,paste(Ano,Mes,Dia,sep="-")),"%Y-%m-%d")
# Voltamos para colunas originais
Tx_emprego.sh<- Tx_emprego.sh %>%
select(Taxa_emprego, Data)
#Checando formato
class(Tx_emprego.sh$Data)
# Corrigindo as datas
# Para lidar com datas no R, é preciso um formato bem especifico
# vamos entao editar o formato atual, que esta em "character" para um formato data
# Para isso, o R precisa da data num formato AA-MM-DD (ainda que o dia nao importe pra dados trimestrais)
# Vamos fazer um passo a passo disso aqui
# Primeiro, vamos dividir a coluna de data em uma de ano, e uma de trimestre:
date <- do.call(rbind, strsplit(EMPREGO.RG.sh$Trimestre, " ")) # dividindo a data pelo "espaco": ano e trimestre
colnames(date)[colnames(date) <- c("Ano", "Trimestre")] # colocando nomes corretos nas colunas
EMPREGO.RG.sh <- EMPREGO.RG.sh %>%
select(Ocupado, Categoria)
EMPREGO.RG.sh <- cbind(EMPREGO.RG.sh,date) # juntando com o data frame anterior
# Tendo as colunas de Ano e Trimestre, agora temos que criar as variaveis de dia e mes
EMPREGO.RG.sh$Dia <- 01  # considere o dia igual para todos (o dia não vai importar)
# Para criar o mes, temos que criar um padrao para que, a partir do mes, se identifique o trimestre
# Fazemos entao pelo primeiro mes: mes 1 p/ o 1o trimestre; mes 4 p/ o 2o trimestre, etc
# (aqui tambem tanto faz qual mes voce escolhe, so tem que estar dentro do trimestre certo)
# criamos um loop para ajustar o mes a partir do trimestre:
EMPREGO.RG.sh$Mes <- ifelse(EMPREGO.RG.sh$Trimestre=="Q1",1,
ifelse(EMPREGO.RG.sh$Trimestre=="Q2",4,
ifelse(EMPREGO.RG.sh$Trimestre=="Q3",7,10)))
# no comando "ifelse", nao precisamos o "10" vai aparecer caso nenhum das condicoes forem aceitas
# ou seja, caso nao seja Q1, Q2 ou Q3 - isto e, estamos no Q4
#Agora podemos dizer pro R a data, ja que temos todos os elementos que precisamos
# Primeiro, vamos transformar o ano em numerico
EMPREGO.RG.sh$Ano <- as.numeric(EMPREGO.RG.sh$Ano)
# Agora dizer pro R que temos datas trimestrais, que serao identificadas pelo ano, mes e dia:
EMPREGO.RG.sh$Data <-as.yearqtr(with(EMPREGO.RG.sh,paste(Ano,Mes,Dia,sep="-")),"%Y-%m-%d")
# Por fim, vamos voltar a ter apenas a Taxa de Ocupação, Categoria e a Data:
EMPREGO.RG.sh<- EMPREGO.RG.sh %>%
select(Ocupado, Categoria, Data)
#Realizando a alteração da coluna "Trimestre" do formato character para o formato date;
# Dividimos a coluna de data em uma de ano, e uma de trimestre:
date <- do.call(rbind, strsplit(EMPREGO.REG.sh$Trimestre, " "))
colnames(date)[colnames(date) <- c("Ano", "Trimestre")]
# Retornamos a data atualizada para o dataframe anterior
EMPREGO.REG.sh <- EMPREGO.REG.sh %>%
select(Ocupado, Regiao)
EMPREGO.REG.sh <- cbind(EMPREGO.REG.sh,date)
# Tendo as colunas de Ano e Trimestre, agora temos que criar as variaveis de dia e mes
# Definimos padrão para a criação dos trimestres, a partir do mês
EMPREGO.REG.sh$Dia <- 01
EMPREGO.REG.sh$Mes <- ifelse(EMPREGO.REG.sh$Trimestre=="Q1",1,
ifelse(EMPREGO.REG.sh$Trimestre=="Q2",4,
ifelse(EMPREGO.REG.sh$Trimestre=="Q3",7,10)))
EMPREGO.REG.sh$Ano <- as.numeric(EMPREGO.REG.sh$Ano)
# Agora dizer pro R que temos datas trimestrais, que serao identificadas pelo ano, mes e dia:
EMPREGO.REG.sh$Data <-as.yearqtr(with(EMPREGO.REG.sh,paste(Ano,Mes,Dia,sep="-")),"%Y-%m-%d")
# Voltamos para colunas originais
EMPREGO.REG.sh<- EMPREGO.REG.sh %>%
select(Ocupado, Regiao, Data)
#Checando formato
class(EMPREGO.REG.sh$Data)
ggplot(EMPREGO.RG.sh, aes(x=Data, y=Ocupado, color=Categoria)) +
geom_line(size=2) + # defining line thickness
geom_line(data = Tx_emprego.sh, aes(x = Data, y = Taxa_emprego, color = "Brasil"), linetype = "dashed") + # adding average employment rate
ggtitle("Figura 1: Taxa de Ocupação por Raça e Gênero") + # plot title
scale_colour_manual(name = "Categoria", values=c("#FF7276", "#45ff66","#eb52ff", "#3366ff","#feff41", "#8968D3")) + # specifying legend and colors
theme_bw() + # setting white background
labs(color = "Categoria", x = "Trimestre", y = "Taxa de ocupação") + # setting legend title
theme(plot.title = element_text(hjust = 0.5))
# Definindo trimestre e ano de referência
i=2023
q=4
#trimestre_imediatamente_anterior <- as.yearqtr(as.Date("2023-07-01"),"%Y-%m-%d")
#mesmo_trimestre_ano_anterior <- as.yearqtr(as.Date("2022-09-01"),"%Y-%m-%d")
knitr::opts_chunk$set(echo = TRUE, error=FALSE, warning=FALSE, message=FALSE)
options(digits=2)
# SEMPRE CARREGAR ESTE CHUNK ANTES DE ABRIR O CÓDIGO COM OS DADOS
#library(PNADcIBGE)
library(survey)
library(convey)
library(tidyverse)
library(dplyr)
library(knitr)
library(openxlsx)
library(kableExtra)
library(zoo)
library(gplots)
#install.packages("xts")
library(xts)
#devtools::install_github("kupietz/kableExtra")
# Setting work directory (Github)-----------------------------------------------
file_directory <- dirname(rstudioapi::getSourceEditorContext()$path)%>%
gsub("\\Short version", "", .)
setwd(file_directory)
getwd()
# Reading PNADc file------------------------------------------------------------
folder_path <- "Input/"
file_path <- paste0(file_directory, folder_path, "PNADc_", q, "_",i, ".RData")
load(file_path)
#load("H:/Meu Drive/Documentos/Made/relatorio_pnad/PNAD_dados_relatorio_04_2023.RData")
#load("H:/Meu Drive/Documentos/Made/relatorio_pnad/dados_serie_historica_042023.RData")
#Realizando a alteração da coluna "Trimestre" do formato character para o formato date;
colnames(Tx_emprego.sh)[colnames(Tx_emprego.sh) == "Taxa de emprego"] = "Taxa_emprego"
# Dividimos a coluna de data em uma de ano, e uma de trimestre:
date <- do.call(rbind, strsplit(Tx_emprego.sh$Trimestre, " "))
colnames(date)[colnames(date) <- c("Ano", "Trimestre")]
# Retornamos a data atualizada para o dataframe anterior
Tx_emprego.sh <- Tx_emprego.sh %>%
select(Taxa_emprego)
Tx_emprego.sh <- cbind(Tx_emprego.sh,date)
# Tendo as colunas de Ano e Trimestre, agora temos que criar as variaveis de dia e mes
# Definimos padrão para a criação dos trimestres, a partir do mês
Tx_emprego.sh$Dia <- 01
Tx_emprego.sh$Mes <- ifelse(Tx_emprego.sh$Trimestre=="Q1",1,
ifelse(Tx_emprego.sh$Trimestre=="Q2",4,
ifelse(Tx_emprego.sh$Trimestre=="Q3",7,10)))
Tx_emprego.sh$Ano <- as.numeric(Tx_emprego.sh$Ano)
# Agora dizer pro R que temos datas trimestrais, que serao identificadas pelo ano, mes e dia:
Tx_emprego.sh$Data <-as.yearqtr(with(Tx_emprego.sh,paste(Ano,Mes,Dia,sep="-")),"%Y-%m-%d")
# Voltamos para colunas originais
Tx_emprego.sh<- Tx_emprego.sh %>%
select(Taxa_emprego, Data)
#Checando formato
class(Tx_emprego.sh$Data)
# Corrigindo as datas
# Para lidar com datas no R, é preciso um formato bem especifico
# vamos entao editar o formato atual, que esta em "character" para um formato data
# Para isso, o R precisa da data num formato AA-MM-DD (ainda que o dia nao importe pra dados trimestrais)
# Vamos fazer um passo a passo disso aqui
# Primeiro, vamos dividir a coluna de data em uma de ano, e uma de trimestre:
date <- do.call(rbind, strsplit(EMPREGO.RG.sh$Trimestre, " ")) # dividindo a data pelo "espaco": ano e trimestre
colnames(date)[colnames(date) <- c("Ano", "Trimestre")] # colocando nomes corretos nas colunas
EMPREGO.RG.sh <- EMPREGO.RG.sh %>%
select(Ocupado, Categoria)
EMPREGO.RG.sh <- cbind(EMPREGO.RG.sh,date) # juntando com o data frame anterior
# Tendo as colunas de Ano e Trimestre, agora temos que criar as variaveis de dia e mes
EMPREGO.RG.sh$Dia <- 01  # considere o dia igual para todos (o dia não vai importar)
# Para criar o mes, temos que criar um padrao para que, a partir do mes, se identifique o trimestre
# Fazemos entao pelo primeiro mes: mes 1 p/ o 1o trimestre; mes 4 p/ o 2o trimestre, etc
# (aqui tambem tanto faz qual mes voce escolhe, so tem que estar dentro do trimestre certo)
# criamos um loop para ajustar o mes a partir do trimestre:
EMPREGO.RG.sh$Mes <- ifelse(EMPREGO.RG.sh$Trimestre=="Q1",1,
ifelse(EMPREGO.RG.sh$Trimestre=="Q2",4,
ifelse(EMPREGO.RG.sh$Trimestre=="Q3",7,10)))
# no comando "ifelse", nao precisamos o "10" vai aparecer caso nenhum das condicoes forem aceitas
# ou seja, caso nao seja Q1, Q2 ou Q3 - isto e, estamos no Q4
#Agora podemos dizer pro R a data, ja que temos todos os elementos que precisamos
# Primeiro, vamos transformar o ano em numerico
EMPREGO.RG.sh$Ano <- as.numeric(EMPREGO.RG.sh$Ano)
# Agora dizer pro R que temos datas trimestrais, que serao identificadas pelo ano, mes e dia:
EMPREGO.RG.sh$Data <-as.yearqtr(with(EMPREGO.RG.sh,paste(Ano,Mes,Dia,sep="-")),"%Y-%m-%d")
# Por fim, vamos voltar a ter apenas a Taxa de Ocupação, Categoria e a Data:
EMPREGO.RG.sh<- EMPREGO.RG.sh %>%
select(Ocupado, Categoria, Data)
#Realizando a alteração da coluna "Trimestre" do formato character para o formato date;
# Dividimos a coluna de data em uma de ano, e uma de trimestre:
date <- do.call(rbind, strsplit(EMPREGO.REG.sh$Trimestre, " "))
colnames(date)[colnames(date) <- c("Ano", "Trimestre")]
# Retornamos a data atualizada para o dataframe anterior
EMPREGO.REG.sh <- EMPREGO.REG.sh %>%
select(Ocupado, Regiao)
EMPREGO.REG.sh <- cbind(EMPREGO.REG.sh,date)
# Tendo as colunas de Ano e Trimestre, agora temos que criar as variaveis de dia e mes
# Definimos padrão para a criação dos trimestres, a partir do mês
EMPREGO.REG.sh$Dia <- 01
EMPREGO.REG.sh$Mes <- ifelse(EMPREGO.REG.sh$Trimestre=="Q1",1,
ifelse(EMPREGO.REG.sh$Trimestre=="Q2",4,
ifelse(EMPREGO.REG.sh$Trimestre=="Q3",7,10)))
EMPREGO.REG.sh$Ano <- as.numeric(EMPREGO.REG.sh$Ano)
# Agora dizer pro R que temos datas trimestrais, que serao identificadas pelo ano, mes e dia:
EMPREGO.REG.sh$Data <-as.yearqtr(with(EMPREGO.REG.sh,paste(Ano,Mes,Dia,sep="-")),"%Y-%m-%d")
# Voltamos para colunas originais
EMPREGO.REG.sh<- EMPREGO.REG.sh %>%
select(Ocupado, Regiao, Data)
#Checando formato
class(EMPREGO.REG.sh$Data)
ggplot(EMPREGO.RG.sh, aes(x=Data, y=Ocupado, color=Categoria)) +
geom_line(size=2) + # defining line thickness
geom_line(data = Tx_emprego.sh, aes(x = Data, y = Taxa_emprego, color = "Brasil"), linetype = "dashed") + # adding average employment rate
ggtitle("Figura 1: Taxa de Ocupação por Raça e Gênero") + # plot title
scale_colour_manual(name = "Categoria", values=c("#FF7276", "#45ff66","#eb52ff", "#3366ff","#feff41", "#8968D3")) + # specifying legend and colors
theme_bw() + # setting white background
labs(color = "Categoria", x = "Trimestre", y = "Taxa de ocupação") + # setting legend title
theme(plot.title = element_text(hjust = 0.5))
View(EMPREGO.RG.sh)
View(Tx_emprego.sh)
ggplot(EMPREGO.RG.sh, aes(x=Data, y=Ocupado, color=Categoria)) +
geom_line(size=2) + # defining line thickness
geom_line(data = Tx_emprego.sh, aes(x = Data, y = Taxa_emprego, color = "Brasil (média)"), linetype = "dashed") + # adding average employment rate
ggtitle("Figura 1: Taxa de Ocupação por Raça e Gênero") + # plot title
scale_colour_manual(name = "Categoria", values=c("#FF7276", "#45ff66","#eb52ff", "#3366ff","#feff41")) + # specifying legend and colors
theme_bw() + # setting white background
labs(color = "Categoria", x = "Trimestre", y = "Taxa de ocupação") + # setting legend title
theme(plot.title = element_text(hjust = 0.5))
ggplot(EMPREGO.RG.sh, aes(x=Data, y=Ocupado, color=Categoria)) +
geom_line(size=2) + # defining line thickness
geom_line(data = Tx_emprego.sh, aes(x = Data, y = Taxa_emprego, color = "Brasil"), linetype = "dashed") + # adding average employment rate
ggtitle("Figura 1: Taxa de Ocupação por Raça e Gênero") + # plot title
scale_colour_manual(name = "Categoria", values=c("#FF7276", "#45ff66","#eb52ff", "#3366ff","#feff41")) + # specifying legend and colors
theme_bw() + # setting white background
labs(color = "Categoria", x = "Trimestre", y = "Taxa de ocupação") + # setting legend title
theme(plot.title = element_text(hjust = 0.5))
ggplot(EMPREGO.RG.sh, aes(x=Data, y=Ocupado, color=Categoria)) +
geom_line(size=2) + # defining line thickness
geom_line(data = Tx_emprego.sh, aes(x = Data, y = Taxa_emprego, color = "Brasil"), linetype = "dashed") + # adding average employment rate
ggtitle("Figura 1: Taxa de Ocupação por Raça e Gênero") + # plot title
scale_colour_manual(name = "Categoria", values=c("#FF7276", "#45ff66","#eb52ff", "#3366ff","#feff41")) + # specifying legend and colors
theme_bw() + # setting white background
labs(color = "Categoria", x = "Trimestre", y = "Taxa de ocupação") + # setting legend title
theme(plot.title = element_text(hjust = 0.5))
ggplot(EMPREGO.RG.sh, aes(x=Data, y=Ocupado, color=Categoria)) +
geom_line(size=2) + # defining line thickness
geom_line(data = Tx_emprego.sh, aes(x = Data, y = Taxa_emprego, color = "Brasil"), linetype = "dashed") + # adding average employment rate
ggtitle("Figura 1: Taxa de Ocupação por Raça e Gênero") + # plot title
scale_colour_manual(name = "Categoria", values=c("#FF7276", "#45ff66","#eb52ff", "#3366ff","#feff41")) + # specifying legend and colors
theme_bw() + # setting white background
labs(color = "Categoria", x = "Trimestre", y = "Taxa de ocupação") + # setting legend title
theme(plot.title = element_text(hjust = 0.5))
ggplot(EMPREGO.RG.sh, aes(x=Data, y=Ocupado, color=Categoria)) +
geom_line(size=2) + # defining line thickness
geom_line(data = Tx_emprego.sh, aes(x = Data, y = Taxa_emprego, color = "Brasil"), linetype = "dashed") + # adding average employment rate
ggtitle("Figura 1: Taxa de Ocupação por Raça e Gênero") + # plot title
scale_colour_manual(name = "Categoria", values=c("#FF7276", "#45ff66","#eb52ff", "#3366ff","#feff41")) + # specifying legend and colors
theme_bw() + # setting white background
labs(color = "Categoria", x = "Trimestre", y = "Taxa de ocupacão") + # setting legend title
theme(plot.title = element_text(hjust = 0.5))
# Definindo trimestre e ano de referência
i=2023
q=4
#trimestre_imediatamente_anterior <- as.yearqtr(as.Date("2023-07-01"),"%Y-%m-%d")
